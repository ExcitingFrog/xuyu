// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	schema "github.com/ExcitingFrog/xuyu/internal/schema"
)

// IRepository is an autogenerated mock type for the IRepository type
type IRepository struct {
	mock.Mock
}

// SaveHello provides a mock function with given fields: ctx, h
func (_m *IRepository) SaveHello(ctx context.Context, h *schema.Hello) error {
	ret := _m.Called(ctx, h)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *schema.Hello) error); ok {
		r0 = rf(ctx, h)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewIRepository creates a new instance of IRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIRepository(t mockConstructorTestingTNewIRepository) *IRepository {
	mock := &IRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
