# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main", "test" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: bufbuild/buf-setup-action@v1.15.0
      with:
        github_token: ${{ secrets.TOKEN }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Install protoc
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Install buf dependencies
      run: |
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
        go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@latest
        go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2@latest
        go install github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc@latest
        export PATH=$PATH:$(go env GOPATH)/bin

    - name: Generate Proto
      run: |
        make buf

    - name: Push Proto
      env:
        TOKEN: ${{ secrets.PUSH }}
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git clone https://${TOKEN}@github.com/ExcitingFrog/go-proto-lib.git
        cp -rf proto go-proto-lib/grpc/xuyu
        cd go-proto-lib
        git status
        CHANGES=$(git status --porcelain)
        if [ -n "$CHANGES" ]; then
          git add .
          git commit -m "Update proto"
          git remote set-url origin https://${TOKEN}@github.com/ExcitingFrog/go-proto-lib.git
          git push origin main:${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
        else
          echo "No changes to commit."
        fi
